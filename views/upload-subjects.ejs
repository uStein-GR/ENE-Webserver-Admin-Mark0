<!DOCTYPE html>
<html lang="en">
<link rel="icon" href="https://www.kmutt.ac.th/wp-content/uploads/2020/09/KMUTT_CI_Semi_Logo-normal-full-1061x1200.png" type="image/png">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Subjects</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <%- include('navbar') %>

    <div class="content">
        <h2>Subjects Dashboard</h2>

        <!-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏° Upload Excel ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ id ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô JS -->
        <form id="excel-upload-form" enctype="multipart/form-data" class="form-group">
            <label for="excelFile">Upload Excel File:</label>
            <input type="file" name="excelFile" id="excelFile" accept=".xlsx" required class="file-input">
            <button type="submit" class="primary-btn">Upload</button>
        </form>
       
        <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Filter -->
        <form id="filter-form" action="/upload-subjects" method="GET" class="filter-group">
            <label for="year">Filter by Year:</label>
            <select name="year" id="year" class="dropdown">
                <% years.forEach(function(year) { %>
                    <option value="<%= year.year %>" <%= year.year == selectedYear ? "selected" : "" %>><%= year.year %></option>
                <% }); %>
            </select>

            <label for="professor">Filter by Professor:</label>
            <select name="professor" id="professor" class="dropdown">
                <option value="">-- All Professors --</option>
                <% professors.forEach(function(prof) { %>
                    <option value="<%= prof.full_name %>" <%= prof.full_name == selectedProfessor ? "selected" : "" %>><%= prof.full_name %></option>
                <% }); %>
            </select>

            <button type="submit" class="filter-btn">Filter</button>
        </form>

        <!-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á Subject -->
        <table class="styled-table">
            <tr>
                <th>Subject ID</th>
                <th>Course Name</th>
                <th>Subject Name</th>
                <th>Year</th>
                <th>Professor</th>
                <th>Update Date</th>
                <th>Action</th>
            </tr>
            <% subjects.forEach(function(subject) { %>
                <tr>
                    <td><%= subject.subj_id %></td>
                    <td contenteditable="false" class="editable"><%= subject.course_name %></td>
                    <td contenteditable="false" class="editable"><%= subject.subj_name %></td>
                    <td contenteditable="false" class="editable"><%= subject.year %></td>
                    <td>
                        <select class="professor-dropdown" style="display: none;">
                            <option value="">-- Select Professor --</option>
                            <% professors.forEach(function(prof) { %>
                                <option value="<%= prof.full_name %>" <%= prof.full_name == subject.professor ? "selected" : "" %>><%= prof.full_name %></option>
                            <% }); %>
                        </select>
                        <span class="professor-text"><%= subject.professor %></span>  <!-- ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏à‡∏≤‡∏Å subject.professor -->
                    </td>                    
                    <td><%= subject.update_data || "N/A" %></td>
                    <td>
                        <button class="edit-btn primary-btn" onclick="editRow(this)">Edit</button>
                        <button class="save-btn primary-btn" onclick="saveRow(this)" style="display: none;">Save</button>
                        <button class="delete-btn danger-btn" onclick="deleteRow('<%= subject.subj_id %>', this)">Delete</button>
                    </td>
                </tr>
            <% }); %>
        </table>

        <form id="export-form" action="/export-subjects" method="POST" class="export-btn-container">
            <input type="hidden" name="year" value="<%= selectedYear %>">
            <input type="hidden" name="professor" value="<%= selectedProfessor %>">
            <button type="submit" class="primary-btn">
                üì§ Export to Excel
            </button>
        </form>

    </div>

    <script>
        window.editRow = function(button) {
            const row = button.closest('tr');
            row.querySelectorAll('.editable').forEach(cell => {
                cell.contentEditable = true;
            });
            row.querySelector('.professor-dropdown').style.display = 'inline';  // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ dropdown ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
            row.querySelector('.professor-text').style.display = 'none';  // ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Professor ID ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ
            row.querySelector('.edit-btn').style.display = 'none';
            row.querySelector('.save-btn').style.display = 'inline';
        }

        window.deleteRow = function(subj_id, button) {
            if (confirm('Are you sure you want to delete this row?')) {
                fetch('/delete-subject', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ subj_id })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const row = button.closest('tr');
                        row.remove();
                        alert('Row deleted successfully!');
                    } else {
                        alert('Failed to delete the row.');
                    }
                });
            }
        }

        window.saveRow = function(button) {
            const row = button.closest('tr');
            const subj_id = row.cells[0].innerText;  // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ Subject ID
            const course_name = row.cells[1].innerText; // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏£‡πå‡∏™
            const subj_name = row.cells[2].innerText; // ‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤
            const year = row.cells[3].innerText; // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ Year
            const professor = row.querySelector('.professor-dropdown').value; // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏à‡∏≤‡∏Å dropdown

            console.log("Saving data:", { subj_id, course_name, subj_name, year, professor });

            // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
            fetch('/update-subject', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ subj_id, course_name, subj_name, year, professor })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    row.querySelectorAll('.editable').forEach(cell => {
                        cell.contentEditable = false;
                    });

                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô dropdown
                    const newProfessor = row.querySelector('.professor-dropdown').value;
                    row.querySelector('.professor-text').innerText = newProfessor;

                    row.querySelector('.professor-dropdown').style.display = 'none';
                    row.querySelector('.professor-text').style.display = 'inline';
                    row.querySelector('.edit-btn').style.display = 'inline';
                    row.querySelector('.save-btn').style.display = 'none';

                    alert('Data updated successfully!');
                } else {
                    alert('Failed to update data');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating data');
            });
        };

        document.getElementById('excel-upload-form').addEventListener('submit', function (e) {
            e.preventDefault(); // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ö‡∏ö‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°

            const formData = new FormData();
            const fileInput = document.getElementById('excelFile');
            const file = fileInput.files[0];

            if (!file) {
                alert("Please select a file.");
                return;
            }

            formData.append('excelFile', file);

            fetch('/upload-excel', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) throw new Error('Upload failed');
                return response.text();
            })
            .then(result => {
                if (result.includes("successfully")) {
                    alert("‚úÖ Upload completed successfully!");
                } else {
                    alert("‚ùå Upload failed: " + result);
                }
            })
            .catch(error => {
                console.error('Upload Error:', error);
                alert("‚ùå Error during upload: " + error.message);
            });
        });

    </script>
</body>
</html>
